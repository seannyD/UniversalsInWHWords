for(i in 1:ncol(area.fixes)){
l.details[!is.na(l.details$glotto) & l.details$glotto == area.fixes[1,i],]$area = area.fixes[2,i]
}
area.fixes2 = c(
"Pacahuara" = "NE South America",
"Proto Austronesian" = "Oceania",
"Proto Polynesian" = "Oceania",
"Slavonic, Old Church" = "Europe",
"Konso" = "Greater Abyssinia",
"Serbian" = "Europe",
"Middle Chinese" = "Southeast Asia"
)
for(i in 1:length(area.fixes2)){
l.details[!is.na(l.details$N1) & l.details$N1 == names(area.fixes2)[i],]$area = area.fixes2[i]
}
g = read.csv("~/Documents/MPI/Glottolog/glottolog-languoid.csv/languoid.csv",stringsAsFactors=F)
g$fam = g[match(g$family_pk,g$pk),]$name
g$fam[is.na(g$family_pk)] = g$name[is.na(g$family_pk)]
rownames(g) = g$id
l.details$langFam = g[l.details$glotto,]$fam
l.details$langFam = g[l.details$glotto,]$fam
l.details$latitude = g[l.details$glotto,]$latitude
l.details$longitude = g[l.details$glotto,]$longitude
#l.details[!is.na(l.details$glotto) & l.details$glotto=='nucl1241',c("longitude","latitude")] = c(115.33,38.87)
geo.fix =matrix(c(
# glotto   #lat  #long
'nucl1241',38.87, 115.33,
"olda1245",42.14,37.11,
"limo1249",18.13, -77.26,
"noot1238",47.4623893,-118.3132951,
"gela1265",22.56, 104.70,
"roma1329",49.6558485,18.0328078,
"nucl1655",-22.11, -58.91,
"kami1255",-6.71, 37.98,
"tokh1242",40.333402, 87.248417,
"tokh1243",39.5708233,71.3739565,
"oldh1241",51.0851933,5.9698196,
"west2376",48.090278, 17.97
),nrow=3)
for(i in 1:ncol(geo.fix)){
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$latitude = geo.fix[2,i]
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$latitude = geo.fix[3,i]
}
l.details[as.numeric(l.details$latitude)>100,]
try(setwd("U:/Pragmatics/New/Analysis/"))
try(setwd("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis"))
l.details = read.csv("../RAW_data/Data_clean_up.csv",stringsAsFactors=F)
l.details$continent = l.details$area
l.details$area = NA
load("~/Documents/MPI/Neandertals_Collab/fossilSept/pca.per.family/autotyp2015-06-09T09-00.rData")
areas = tapply(as.character(autotyp.geography$area),as.character(autotyp.geography$glottolog_LID.2014),head,n=1)
#l.details$area[nchar(l.details$area)<2] = NA
l.details$area = areas[l.details$glotto]
area.fixes = matrix(c(
"cent2050","African Savannah",
"maha1287","Indic",
"nucl1241","Southeast Asia",  # Li of Baoding
"plat1254","Southeast Asia",
"oroq1238","N Coast Asia",
"gela1265","Southeast Asia",
"nucl1655","SE South America",
"west2376","Europe",
"gheg1238","Europe",
"olda1245","Greater Mesopotamia",
"sout2996","Andean",
"pano1254","NE South America",
"chew1245","Oceania",
"chad1240","Southeast Asia",
"zaca1242","Mesoamerica",
"iyow1239","SE South America",
"nort2740","Southeast Asia",
"lang1316","Southeast Asia",
"limo1249","Mesoamerica",
"maon1241","Southeast Asia",
"nege1244","Mesoamerica",
"noot1238","Alaska-Oregon",
"polc1243","African Savannah",
"sout2746","Southeast Asia",
"tokh1242","Europe",
"tokh1243","Europe",
"trin1274","NE South America",
"yavi1244","NE South America",
"minz1236","Southeast Asia"
),nrow=2)
for(i in 1:ncol(area.fixes)){
l.details[!is.na(l.details$glotto) & l.details$glotto == area.fixes[1,i],]$area = area.fixes[2,i]
}
area.fixes2 = c(
"Pacahuara" = "NE South America",
"Proto Austronesian" = "Oceania",
"Proto Polynesian" = "Oceania",
"Slavonic, Old Church" = "Europe",
"Konso" = "Greater Abyssinia",
"Serbian" = "Europe",
"Middle Chinese" = "Southeast Asia"
)
for(i in 1:length(area.fixes2)){
l.details[!is.na(l.details$N1) & l.details$N1 == names(area.fixes2)[i],]$area = area.fixes2[i]
}
g = read.csv("~/Documents/MPI/Glottolog/glottolog-languoid.csv/languoid.csv",stringsAsFactors=F)
g$fam = g[match(g$family_pk,g$pk),]$name
g$fam[is.na(g$family_pk)] = g$name[is.na(g$family_pk)]
rownames(g) = g$id
l.details$langFam = g[l.details$glotto,]$fam
l.details$langFam = g[l.details$glotto,]$fam
l.details$latitude = g[l.details$glotto,]$latitude
l.details$longitude = g[l.details$glotto,]$longitude
#l.details[!is.na(l.details$glotto) & l.details$glotto=='nucl1241',c("longitude","latitude")] = c(115.33,38.87)
geo.fix =matrix(c(
# glotto   #lat  #long
'nucl1241',38.87, 115.33,
"olda1245",42.14,37.11,
"limo1249",18.13, -77.26,
"noot1238",47.4623893,-118.3132951,
"gela1265",22.56, 104.70,
"roma1329",49.6558485,18.0328078,
"nucl1655",-22.11, -58.91,
"kami1255",-6.71, 37.98,
"tokh1242",40.333402, 87.248417,
"tokh1243",39.5708233,71.3739565,
"oldh1241",51.0851933,5.9698196,
"west2376",48.090278, 17.97
),nrow=3)
for(i in 1:ncol(geo.fix)){
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$latitude = geo.fix[2,i]
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$longitude = geo.fix[3,i]
}
l.details[as.numeric(l.details$latitude)>100,]
write.csv(l.details,file="../RAW_data/Data_clean_up2.csv")
try(setwd("U:/Pragmatics/New/Analysis/"))
try(setwd("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis"))
# load data and filter unwanted languages
# (creates variable 'alldata')
source("RestrictionsApplied.R") # also loads PermutationTools.R
source("grammars.R")
source("makeDataVariables.R")
l.details[l.details$latitude < -50,]
d.wh.glotto = names2glotto[colnames(d.wh.m)]
l.details2 = l.details[l.details$glotto %in% d.wh.glotto,]
library(maps)
map(interior = F, fill=T, col='gray', )
points(l.details2$longitude,l.details2$latitude,col=rgb(1,0,0),  pch= 16)
library(ggplot2)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color="blue", size=3)
mp
l.details[l.details$latitude < 25 & l.details$longitude < -100,]
rainbow(length(unique(l.details2$area)))
cols = rainbow(length(unique(l.details2$area)))
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=cols, size=3)
mp
l.details2 = cols[as.numeric(as.factor(l.details2$area))]
l.details2 = l.details[l.details$glotto %in% d.wh.glotto,]
library(maps)
map(interior = F, fill=T, col='gray', )
points(l.details2$longitude,l.details2$latitude,col=rgb(1,0,0),  pch= 16)
library(ggplot2)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
cols = rainbow(length(unique(l.details2$area)))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
set.seed(2398)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
set.seed(23)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
set.seed(12)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
sort(l.details$N1)
max(table(sort(l.details$N1)))
l.details2 = l.details2[!duplicated(l.details2$glotto),]
max(table(sort(l.details$N1)))
table(sort(l.details$N1))
sort(table(sort(l.details$N1)))
l.details[l.details$N1=="Armenian",]
l.details[l.details$N1=="Armenian",]$glotto
duplicated(l.details[l.details$N1=="Armenian",]$glotto)
l.details2 = l.details[l.details$glotto %in% d.wh.glotto,]
dim(l.details2)
l.details2 = l.details2[!duplicated(l.details2$glotto),]
dim(l.details2)
table(sort(l.details2$N1))
sort(table(sort(l.details2$N1)))
l.details2[l.details2$latitude>0 & l.details2$latitude <25 & l.details2$longitude>0, & l.details2$longitude <25,]
l.details2[l.details2$latitude>0 & l.details2$latitude <25 & l.details2$longitude>0 & l.details2$longitude <25,]
l.details2[l.details2$latitude>0 & l.details2$latitude <25 & l.details2$longitude>0 & l.details2$longitude <50,]
l.details2[l.details2$N1=="English",]
l.details2[l.details2$latitude>-50 & l.details2$latitude <0 & l.details2$longitude>0 & l.details2$longitude <100,]
try(setwd("U:/Pragmatics/New/Analysis/"))
try(setwd("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis"))
l.details = read.csv("../RAW_data/Data_clean_up.csv",stringsAsFactors=F)
l.details$continent = l.details$area
l.details$area = NA
load("~/Documents/MPI/Neandertals_Collab/fossilSept/pca.per.family/autotyp2015-06-09T09-00.rData")
areas = tapply(as.character(autotyp.geography$area),as.character(autotyp.geography$glottolog_LID.2014),head,n=1)
#l.details$area[nchar(l.details$area)<2] = NA
l.details$area = areas[l.details$glotto]
area.fixes = matrix(c(
"cent2050","African Savannah",
"maha1287","Indic",
"nucl1241","Southeast Asia",  # Li of Baoding
"plat1254","Southeast Asia",
"oroq1238","N Coast Asia",
"gela1265","Southeast Asia",
"nucl1655","SE South America",
"west2376","Europe",
"gheg1238","Europe",
"olda1245","Greater Mesopotamia",
"sout2996","Andean",
"pano1254","NE South America",
"chew1245","Oceania",
"chad1240","Southeast Asia",
"zaca1242","Mesoamerica",
"iyow1239","SE South America",
"nort2740","Southeast Asia",
"lang1316","Southeast Asia",
"limo1249","Mesoamerica",
"maon1241","Southeast Asia",
"nege1244","Mesoamerica",
"noot1238","Alaska-Oregon",
"polc1243","African Savannah",
"sout2746","Southeast Asia",
"tokh1242","Europe",
"tokh1243","Europe",
"trin1274","NE South America",
"yavi1244","NE South America",
"minz1236","Southeast Asia"
),nrow=2)
for(i in 1:ncol(area.fixes)){
l.details[!is.na(l.details$glotto) & l.details$glotto == area.fixes[1,i],]$area = area.fixes[2,i]
}
area.fixes2 = c(
"Pacahuara" = "NE South America",
"Proto Austronesian" = "Oceania",
"Proto Polynesian" = "Oceania",
"Slavonic, Old Church" = "Europe",
"Konso" = "Greater Abyssinia",
"Serbian" = "Europe",
"Middle Chinese" = "Southeast Asia"
)
for(i in 1:length(area.fixes2)){
l.details[!is.na(l.details$N1) & l.details$N1 == names(area.fixes2)[i],]$area = area.fixes2[i]
}
g = read.csv("~/Documents/MPI/Glottolog/glottolog-languoid.csv/languoid.csv",stringsAsFactors=F)
g$fam = g[match(g$family_pk,g$pk),]$name
g$fam[is.na(g$family_pk)] = g$name[is.na(g$family_pk)]
rownames(g) = g$id
l.details$langFam = g[l.details$glotto,]$fam
l.details$langFam = g[l.details$glotto,]$fam
l.details$latitude = g[l.details$glotto,]$latitude
l.details$longitude = g[l.details$glotto,]$longitude
#l.details[!is.na(l.details$glotto) & l.details$glotto=='nucl1241',c("longitude","latitude")] = c(115.33,38.87)
geo.fix =matrix(c(
# glotto   #lat  #long
'nucl1241',38.87, 115.33,
"olda1245",42.14,37.11,
"limo1249",18.13, -77.26,
"noot1238",47.4623893,-118.3132951,
"gela1265",22.56, 104.70,
"roma1329",49.6558485,18.0328078,
"nucl1655",-22.11, -58.91,
"kami1255",25.89, 109.22,
"tokh1242",40.333402, 87.248417,
"tokh1243",39.5708233,71.3739565,
"oldh1241",51.0851933,5.9698196,
"west2376",48.090278, 17.97
),nrow=3)
for(i in 1:ncol(geo.fix)){
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$latitude = geo.fix[2,i]
l.details[!is.na(l.details$glotto) & l.details$glotto == geo.fix[1,i],]$longitude = geo.fix[3,i]
}
write.csv(l.details,file="../RAW_data/Data_clean_up2.csv")
try(setwd("U:/Pragmatics/New/Analysis/"))
try(setwd("~/Documents/MPI/SemanticsPragmatics/2015Course/Projects/Slonimska/NewAnalysis/Pragmatics_Slonimska/Analysis"))
# load data and filter unwanted languages
# (creates variable 'alldata')
source("RestrictionsApplied.R") # also loads PermutationTools.R
source("grammars.R")
source("makeDataVariables.R")
d.wh.glotto = names2glotto[colnames(d.wh.m)]
l.details2 = l.details[l.details$glotto %in% d.wh.glotto,]
l.details2 = l.details2[!duplicated(l.details2$glotto),]
library(maps)
map(interior = F, fill=T, col='gray', )
points(l.details2$longitude,l.details2$latitude,col=rgb(1,0,0),  pch= 16)
library(ggplot2)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
set.seed(12)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
mp <- mp+ geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
world <- map_data("world")
world <- world[world$region != "Antarctica",]
world <- map_data("world")
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="white", fill="#7f7f7f", size=0.05, alpha=1/4)
gg
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="#7f7f7f", fill="#7f7f7f", size=0.05, alpha=1/4)
gg
?geom_map
?map_data
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
color="#7f7f7f", fill="#7f7f7f", size=0.05, alpha=1/4)
gg
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4)
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4)
gg
set.seed(12)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
#Now Layer the cities on top
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
mp
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
set.seed(13)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
set.seed(14)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
set.seed(15)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
set.seed(16)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
table(l.details2$area)
set.seed(16)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
l.details2$area.colour[l.details2$area=="Indic"] = 'black'
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
set.seed(15)
cols = sample(rainbow(length(unique(l.details2$area))))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
l.details2$area.colour[l.details2$area=="Indic"] = 'black'
gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
?geom_map
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4)
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf")
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png")
finalMap
dev.off()
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4,
xlab='')
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
world <- map_data("world", interior = F, xlim = c(-179, 179))
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png")
finalMap
dev.off()
table(l.details2$area)
l.details2$area.colour[l.details2$area=="N Coast Asia"] = 'dark grey'
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=3)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
set.seed(15)
cols = sample(rainbow(length(unique(l.details2$area)), alpha = 0.9))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
l.details2$area.colour[l.details2$area=="Indic"] = 'black'
l.details2$area.colour[l.details2$area=="N Coast Asia"] = 'dark grey'
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=2)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png", width=8, height=5)
finalMap
dev.off()
cols = sample(rainbow(length(unique(l.details2$area)), alpha = 0.5))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
l.details2$area.colour[l.details2$area=="Indic"] = 'black'
l.details2$area.colour[l.details2$area=="N Coast Asia"] = 'dark grey'
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=2)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png", width=8, height=5)
finalMap
dev.off()
set.seed(15)
cols = sample(rainbow(length(unique(l.details2$area)), alpha = 0.75))
l.details2$area.colour = cols[as.numeric(as.factor(l.details2$area))]
l.details2$area.colour[l.details2$area=="Indic"] = 'black'
l.details2$area.colour[l.details2$area=="N Coast Asia"] = 'dark grey'
world <- map_data("world", interior = F)
world <- world[world$region != "Antarctica",]
gg <- ggplot()
gg <- gg + geom_map(data=world, map=world,
aes(x=long, y=lat, map_id=region),
fill="#7f7f7f", size=0.05, alpha=1/4) +
xlab('') + ylab("")
finalMap= gg + geom_point(aes(y=l.details2$latitude, x=l.details2$longitude) ,color=l.details2$area.colour, size=2)
pdf("../Writeup/images/mapOfLanguages.pdf", width=8, height=5)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png", width=8, height=5)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png", width=1600, height=1000)
finalMap
dev.off()
png("../Writeup/images/mapOfLanguages.png", width=800, height=500)
finalMap
dev.off()
